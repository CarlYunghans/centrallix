$Version=2$
smart_field "widget/component-decl"
    {
    width=220;height=runserver(condition(:this:type == 'textarea', 64, 20));

    form "widget/parameter" { type=object; find_container="widget/form";}
    field "widget/parameter" { type=string; }
    text "widget/parameter" { type=string; }
    tooltip "widget/parameter" { type=string; default=null; }
    lookup_with "widget/parameter" { type=string; default=null; }
    sql "widget/parameter" { type=string; default="select 1,1 where 1 != 1"; }
    type "widget/parameter" { type=string; default="standard"; }
    ctl_type "widget/parameter" { type=string; default="editbox"; }

    SetValue "widget/component-decl-action" { }
    sv_cn "widget/connector" { event="SetValue"; target=ctl; action="SetValue"; Value=runclient(:Value); }

    label_normal "widget/label"
	{ 
	condition=runserver(:this:ctl_type != 'checkboxleft');
	x=0;y=0;height=20;width=95;
	text=runserver(:this:text); 
	align=right; 
	}
    label_checkbox "widget/label"
	{ 
	condition=runserver(:this:ctl_type == 'checkboxleft');
	x=24;y=0;height=20;width=196;
	text=runserver(:this:text); 
	align=left; 
	}
    ctl "widget/checkbox" 
	{
	condition=runserver(:this:ctl_type == 'checkboxleft');
	x=0;y=2;height=16;
	width=20;
	fl_width=0;
	fieldname=runserver(:this:field); 
	form=form; 
        ro_hints "widget/hints" { condition=runserver(:this:type == 'readonly'); style=readonly; }
	}
    ctl "widget/checkbox" 
	{
	condition=runserver(:this:ctl_type == 'checkbox');
	x=100;y=2;height=16;
	width=120;
	fl_width=40;
	fieldname=runserver(:this:field); 
	form=form; 
        ro_hints "widget/hints" { condition=runserver(:this:type == 'readonly'); style=readonly; }
	}
    ctl "widget/datetime"
	{
	condition=runserver(:this:ctl_type == 'datetime');
	x=100;y=0;height=20;width=120; 
	bgcolor=white; 
	fl_width=40;
	fieldname=runserver(:this:field); 
	tooltip = runserver(:this:tooltip);
	form=form; 
        create_hints "widget/hints" { condition=runserver(:this:type == 'create'); default = runclient(getdate()); style=readonly; }
        modify_hints "widget/hints" { condition=runserver(:this:type == 'modify'); default = runclient(getdate()); style=readonly,alwaysdef; }
        ro_hints "widget/hints" { condition=runserver(:this:type == 'readonly'); style=readonly; }
	}
    ctl "widget/dropdown" 
	{ 
	condition=runserver(:this:ctl_type == 'dropdown');
	x=100;y=0;height=20;width=120; 
	fl_width=40; 
	bgcolor=white; 
	fieldname=runserver(:this:field); 
	form=form; 
	sql=runserver(:this:sql); 
	mode=dynamic_server; 
	hilight="#d0d0d0";
        ro_hints "widget/hints" { condition=runserver(:this:type == 'readonly'); style=readonly; }
	}
    ctl "widget/textarea"
	{ 
	condition=runserver(:this:ctl_type == 'textarea');
	x=100;y=0;height=64;width=120;
	bgcolor=white;
	fieldname=runserver(:this:field);
	form=form;
	}
    ctl "widget/editbox" 
	{
	condition=runserver(:this:ctl_type == 'editbox');
	x=100;y=0;height=20;
	width=runserver(condition(char_length(:this:lookup_with) > 0, 100, 120));
	bgcolor=white; 
	fieldname=runserver(:this:field); 
	form=form; 
	tooltip = runserver(:this:tooltip);
        create_hints "widget/hints" { condition=runserver(:this:type == 'create'); default = runclient(user_name()); style=readonly; }
        modify_hints "widget/hints" { condition=runserver(:this:type == 'modify'); default = runclient(user_name()); style=readonly,alwaysdef; }
        ro_hints "widget/hints" { condition=runserver(:this:type == 'readonly'); style=readonly; }
	}
    lookup_btn "widget/textbutton"
	{ 
	condition=runserver(char_length(:this:lookup_with) > 0); 
	x=202; y=0; height=20; width=18; 
	tristate=no; 
	fgcolor1=black; 
	fgcolor2=white; 
	text="?"; 
	bgcolor=''; 
	enabled=runclient(:form:is_discardable);

	lookup_cn "widget/connector"
	    {
	    event = "Click";
	    target = lookup_cmp;
	    action = "Instantiate";
	    dest_editbox = ctl;
	    desc = runserver(:this:text);
	    }
	}
    lookup_cmp "widget/component"
	{
	toplevel = yes;
	condition=runserver(char_length(:this:lookup_with) > 0); 
	mode=dynamic;
	path=runserver(:this:lookup_with);
	}
    }
